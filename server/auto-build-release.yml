name: auto build release
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build-go-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #         goos: [ linux ]
        #         goarch: [ amd64 ]
        goos: [linux, darwin]
        goarch: [amd64, arm64, arm]
        exclude: #
          - goarch: arm64
            goos: darwin
          - goarch: arm
            goos: darwin
    steps:
      - name: dependence
        run: |
          #CC="clang"
          sudo apt update -y
          go env -w CGO_ENABLED=1
          go env -w GOOS=${{matrix.goos}} 
          go env -w GOARCH=${{matrix.goarch}}
          case ${{matrix.goarch}} in
          arm64)
            sudo apt install gcc-aarch64-linux-gnu -y
            go env -w CC=aarch64-linux-gnu-gcc
            ;;
          arm)
            sudo apt-get install gcc-arm-linux-gnueabihf -y
            go env -w CC=arm-linux-gnueabihf-gcc
            ;;
          esac
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.38
        with:
          github_token: ${{ secrets.Action_Token }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.19
          binary_name: "AirGo"
          extra_files: ./server/config.yaml
          project_path: "./server"
          ldflags: -s -w --extldflags "-static -fpic"

  build-web:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.16.0]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: |
          cd web
          npm install
          npm run build
      - name: package
        run: |
          cd web
          zip -r web.zip dist
      - name: upload web to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.Action_Token }}
          file: web/web.zip
          tag: ${{ github.ref }}
          file_glob: true


