name: build-go-binary
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #         goos: [ linux ]
        #         goarch: [ amd64 ]
        goos: [linux, darwin]
        goarch: [amd64, arm64, arm]
        exclude: #
          - goarch: arm64
            goos: darwin
          - goarch: arm
            goos: darwin
    steps:
      - name: dependence
        run: |
          sudo apt update -y
          go env -w CGO_ENABLED=1
          go env -w GOOS=${{matrix.goos}} 
          go env -w GOARCH=${{matrix.goarch}}
          case ${{matrix.goarch}} in
          arm64)
            sudo apt install gcc-aarch64-linux-gnu -y
            go env -w CC=aarch64-linux-gnu-gcc
            ;;
          arm}
            sudo apt-get install gcc-arm-linux-gnueabihf -y
            go env -w CC=arm-linux-gnueabihf-gcc
            ;;
          esac
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.38
        with:
          github_token: ${{ secrets.Action_Token }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: 1.19
          binary_name: "AirGo"
          extra_files: ./server/config.yaml
          project_path: "./server"
          ldflags: -s -w --extldflags "-static -fpic"
